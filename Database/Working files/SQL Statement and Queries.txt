[Creating the tables] (date is in dd-MM-yyyy format)
    DROP TABLE IF EXISTS Vendor;
    CREATE TABLE Vendor(
    Vendor_ID int NOT NULL AUTO_INCREMENT,
    Name varchar(255) NOT NULL,
    Description varchar (255),
    PRIMARY KEY(Vendor_ID)
    );

    DROP TABLE IF EXISTS Expense_Category;
    CREATE TABLE Expense_Category(
    Category_ID int NOT NULL AUTO_INCREMENT,
    Name varchar(255),
    PRIMARY KEY(Category_ID)
    );

    DROP TABLE IF EXISTS TimelineProduct;
    CREATE TABLE IF NOT EXISTS TimelineProduct(
    Product_ID int NOT NULL AUTO_INCREMENT,
    Name varchar(255) NOT NULL,
    Description varchar(600),
    Category integer not null,
    PRIMARY KEY(Product_ID)
    );

    DROP TABLE IF EXISTS ProductPurchaseDate;
    CREATE TABLE IF NOT EXISTS ProductPurchaseDate(
    PurchaseDate_ID int NOT NULL AUTO_INCREMENT,
    Date varchar(20) NOT NULL,
    PurchasePrice NUMERIC(20,2),
    Product_ID integer NOT NULL,
    PRIMARY KEY(PurchaseDate_ID),
    FOREIGN KEY (Product_ID) REFERENCES TimelineProduct(Product_ID)
    );

    DROP TABLE IF EXISTS TimelineProductCategory;
    CREATE TABLE IF NOT EXISTS TimelineProductCategory(
    Category_ID int NOT NULL AUTO_INCREMENT,
    CategoryName varchar(255) NOT NULL,
    PRIMARY KEY(Category_ID)
    );


    DROP TABLE IF EXISTS Income;
    CREATE TABLE Income(
    Income_ID int NOT NULL AUTO_INCREMENT,
    Name varchar(255),
    Description varchar(600),
    Date DATE NOT NULL,
    PRIMARY KEY(Income_ID)
    );

    DROP TABLE IF EXISTS Purchase;
    CREATE TABLE Purchase(
    Purchase_ID int not null auto_increment,
    Date varchar(20) NOT NULL,
    Item varchar(600),
    Description varchar(255),
    Category integer NOT NULL,
    PRIMARY KEY (Purchase_ID),
    FOREIGN KEY (Category) REFERENCES Expense_Category(Category_ID)
    );

[Queries]

  [Insert new entry into purchases table]
   INSERT INTO purchase (Date, Item, Description, Category) VALUES ('26-03-2022', 'testitem', 'testdescription' ,1); //Adding testentry. 1 is the id of 'testcategory'
   INSERT INTO purchase (Date, Item , Description , Category) VALUES ( 'today' , 'test18:29' , 'testing insertion' ,2)//test entry for javafx, does not work currently.//This does work now. The error was because there are quotation marks around the table names. only put qoutations around string values that are inserted.
   INSERT INTO 'Purchase'('Date', 'Item', 'Description', 'Category') VALUES (?,?,?,?);

  [Get entries from the purchases table]
   SELECT Purchase_ID, Date, Item, Description, Name
   FROM purchase JOIN expense_category
   ON purchase.Category = expense_category.Category_ID;

  [Insert new entry into expense_category table]
    INSERT INTO EXPENSE_CATEGORY (Name) VALUES ('testcategory1' ); //H2 specific statement
  INSERT INTO 'expense_category'('Name') VALUES (?);

  [Get entries from expense_category table]

  [Fill TimelineProduct.java]
  SELECT product.Product_ID, product.Name, product.Description,category.Name From TimelineProduct product join TimelineProductCategory category on product.category = category.Category_ID
  SELECT product.Product_ID, product.Name, product.Description,category.CategoryName From TimelineProduct product join TimelineProductCategory category on product.category = category.Category_ID //updated

  [Insert new entry into TimelineProduct]
  insert into TimelineProduct (Name, Description, Category) Values ('testproduct','testing value insertion from h2 GUI',1)//H2 specifictestentry
  Insert into TimelineProduct (Name, Description, Category) Values (?,?,?)

  [Insert new entry into ProductPurchaseDate]
  Insert into ProductPurchaseDate (Date, PurchasePrice, Product_ID) Values ('today' , 12.34, 1) //H2 specific testentry
